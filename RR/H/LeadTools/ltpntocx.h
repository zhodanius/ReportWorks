// ActiveX error codes
#include "L_OcxErr.h"

   typedef enum tagPaintUserModeConstants
   {
      PAINT_USERMODE_MANUAL = 0,
      PAINT_USERMODE_AUTO = 1,
   } PaintUserModeConstants;

   typedef enum tagLTFontCharset
   {
      LTFONT_ANSI_CHARSET    = 0,  //ANSI_CHARSET       
      LTFONT_DEFAULT_CHARSET = 1,  //DEFAULT_CHARSET    
      LTFONT_SYMBOL_CHARSET  = 2,  //SYMBOL_CHARSET     
      LTFONT_OEM_CHARSET     = 255,//OEM_CHARSET        
   } LTFontCharset;

   typedef enum tagLTFontWidth
   {
      LTFONT_FW_DONTCARE    = 0,  //FW_DONTCARE 
      LTFONT_FW_THIN        = 100,//FW_THIN
      LTFONT_FW_EXTRALIGHT  = 200,//FW_EXTRALIGH 
      LTFONT_FW_ULTRALIGHT  = 200,//FW_ULTRALIGH 
      LTFONT_FW_LIGHT       = 300,//FW_LIGHT
      LTFONT_FW_NORMAL      = 400,//FW_NORMAL
      LTFONT_FW_REGULAR     = 400,//FW_REGULAR
      LTFONT_FW_MEDIUM      = 500,//FW_MEDIUM
      LTFONT_FW_SEMIBOLD    = 600,//FW_SEMIBOLD  
      LTFONT_FW_DEMIBOLD    = 600,//FW_DEMIBOLD  
      LTFONT_FW_BOLD        = 700,//FW_BOLD
      LTFONT_FW_EXTRABOLD   = 800,//FW_EXTRABOLD 
      LTFONT_FW_ULTRABOLD   = 800,//FW_ULTRABOLD 
      LTFONT_FW_HEAVY       = 900,//FW_HEAVY
      LTFONT_FW_BLACK       = 900,//FW_BLACK
   } LTFontWeight;

   typedef enum tagBrushTouchShape
   {
      BRUSH_TOUCH_SHAPE_CIRCLE = 0,
   } BrushTouchShape;  

   typedef enum tagBrushTouchContentsType
   {
      BRUSH_TOUCH_CONTENTS_COLOR      = 0,
      BRUSH_TOUCH_CONTENTS_IMAGE      = 1,
   } BrushTouchContentsType;  
	
   typedef enum tagBrushHardnessDistributionType
   {
      BRUSH_HD_TYPE_0 = 0,
   } BrushHardnessDistributionType;  

   typedef enum tagShapeBackStyle
   {
      SHAPE_BACKSTYLE_TRANSPARENT = 0,
      SHAPE_BACKSTYLE_OPAQUE      = 1, 
      SHAPE_BACKSTYLE_TILEDIMAGE  = 2, 
      SHAPE_BACKSTYLE_GRADIENT    = 3,
   } ShapeBackStyle;  

   typedef enum tagShapeBorderStyle
   {
      SHAPE_BORDERSTYLE_SOLID             = 0,
      SHAPE_BORDERSTYLE_DASH              = 1,
      SHAPE_BORDERSTYLE_DOT               = 2,
      SHAPE_BORDERSTYLE_DASHDOT           = 3,
      SHAPE_BORDERSTYLE_DASHDOTDOT        = 4,
      SHAPE_BORDERSTYLE_DASHDOTDOTDOT     = 5,
      SHAPE_BORDERSTYLE_DASH_GAP          = 6,
      SHAPE_BORDERSTYLE_DOT_GAP           = 7,
      SHAPE_BORDERSTYLE_DASHDOT_GAP       = 8,
      SHAPE_BORDERSTYLE_DASHDOTDOT_GAP    = 9,
      SHAPE_BORDERSTYLE_DASHDOTDOTDOT_GAP = 10,
      SHAPE_BORDERSTYLE_TRANSPARENT       = 11,
   } ShapeBorderStyle;  

   typedef enum tagShapeBorderBrushStyle
   {
      SHAPE_BORDERBRUSHSTYLE_COLOR   = 0,
      SHAPE_BORDERBRUSHSTYLE_PATTERN = 1,
   } ShapeBorderBrushStyle;  

   typedef enum tagShapeGradientStyle
   {
      SHAPE_GRADIENTSTYLE_NONE                  = 0,
      SHAPE_GRADIENTSTYLE_LINE_L_TO_R           = 1000,
      SHAPE_GRADIENTSTYLE_LINE_R_TO_L           = 1001,
      SHAPE_GRADIENTSTYLE_LINE_T_TO_B           = 1002,
      SHAPE_GRADIENTSTYLE_LINE_B_TO_T           = 1003,
      SHAPE_GRADIENTSTYLE_LINE_LT_TO_RB         = 1004,
      SHAPE_GRADIENTSTYLE_LINE_LB_TO_RT         = 1005,
      SHAPE_GRADIENTSTYLE_LINE_RT_TO_LB         = 1006,
      SHAPE_GRADIENTSTYLE_LINE_RB_TO_LT         = 1007,
      SHAPE_GRADIENTSTYLE_LINE2_L_AND_R_TO_C    = 1008,
      SHAPE_GRADIENTSTYLE_LINE2_C_TO_L_AND_R    = 1009,
      SHAPE_GRADIENTSTYLE_LINE2_T_AND_B_TO_C    = 1010,
      SHAPE_GRADIENTSTYLE_LINE2_C_TO_T_AND_B    = 1011,
      SHAPE_GRADIENTSTYLE_LINE2_LT_AND_RB_TO_C  = 1012,
      SHAPE_GRADIENTSTYLE_LINE2_C_TO_LT_AND_RB  = 1013,
      SHAPE_GRADIENTSTYLE_LINE2_RT_AND_LB_TO_C  = 1014,
      SHAPE_GRADIENTSTYLE_LINE2_C_TO_RT_AND_LB  = 1015,

      SHAPE_GRADIENTSTYLE_ANGLE_TO_LT           = 2000,
      SHAPE_GRADIENTSTYLE_ANGLE_TO_LB           = 2001,
      SHAPE_GRADIENTSTYLE_ANGLE_TO_RT           = 2002,
      SHAPE_GRADIENTSTYLE_ANGLE_TO_RB           = 2003,
      SHAPE_GRADIENTSTYLE_ANGLE_FROM_LT         = 2004,
      SHAPE_GRADIENTSTYLE_ANGLE_FROM_LB         = 2005,
      SHAPE_GRADIENTSTYLE_ANGLE_FROM_RT         = 2006,
      SHAPE_GRADIENTSTYLE_ANGLE_FROM_RB         = 2007,

      SHAPE_GRADIENTSTYLE_RECTANGLE_TO_C        = 3000,
      SHAPE_GRADIENTSTYLE_RECTANGLE_FROM_C      = 3001,

      SHAPE_GRADIENTSTYLE_ELLIPSE_TO_C          = 4000,
      SHAPE_GRADIENTSTYLE_ELLIPSE_FROM_C        = 4001,

      SHAPE_GRADIENTSTYLE_CONE_FROM_L           = 5000,
      SHAPE_GRADIENTSTYLE_CONE_FROM_R           = 5001,
      SHAPE_GRADIENTSTYLE_CONE_FROM_T           = 5002,
      SHAPE_GRADIENTSTYLE_CONE_FROM_B           = 5003,
      SHAPE_GRADIENTSTYLE_CONE_FROM_LT          = 5004,
      SHAPE_GRADIENTSTYLE_CONE_FROM_LB          = 5005,
      SHAPE_GRADIENTSTYLE_CONE_FROM_RT          = 5006,
      SHAPE_GRADIENTSTYLE_CONE_FROM_RB          = 5007,
   } ShapeGradientStyle;  

   typedef enum tagShapeBorderEndCap
   {
      SHAPE_BORDERENDCAP_ROUND  = 0x0000,//PS_ENDCAP_ROUND, 
      SHAPE_BORDERENDCAP_SQUARE = 0x0100,//PS_ENDCAP_SQUARE, 
      SHAPE_BORDERENDCAP_FLAT   = 0x0200,//PS_ENDCAP_FLAT,
   } ShapeBorderEndCap;  

   typedef enum tagPaintFillStyle
   {
      FILL_FILLSTYLE_SOLID    = 0,
      FILL_FILLSTYLE_GRADIENT = 1,
      FILL_FILLSTYLE_PATTERN  = 2,
   } PaintFillStyle;  
   
   typedef enum tagFillGradientStyle
   {
      FILL_GRADIENTSTYLE_NONE                 = 0,
      FILL_GRADIENTSTYLE_LINE_L_TO_R          = 1000,
      FILL_GRADIENTSTYLE_LINE_R_TO_L          = 1001,
      FILL_GRADIENTSTYLE_LINE_T_TO_B          = 1002,
      FILL_GRADIENTSTYLE_LINE_B_TO_T          = 1003,
      FILL_GRADIENTSTYLE_LINE_LT_TO_RB        = 1004,
      FILL_GRADIENTSTYLE_LINE_LB_TO_RT        = 1005,
      FILL_GRADIENTSTYLE_LINE_RT_TO_LB        = 1006,
      FILL_GRADIENTSTYLE_LINE_RB_TO_LT        = 1007,
      FILL_GRADIENTSTYLE_LINE2_L_AND_R_TO_C   = 1008,
      FILL_GRADIENTSTYLE_LINE2_C_TO_L_AND_R   = 1009,
      FILL_GRADIENTSTYLE_LINE2_T_AND_B_TO_C   = 1010,
      FILL_GRADIENTSTYLE_LINE2_C_TO_T_AND_B   = 1011,
      FILL_GRADIENTSTYLE_LINE2_LT_AND_RB_TO_C = 1012,
      FILL_GRADIENTSTYLE_LINE2_C_TO_LT_AND_RB = 1013,
      FILL_GRADIENTSTYLE_LINE2_RT_AND_LB_TO_C = 1014,
      FILL_GRADIENTSTYLE_LINE2_C_TO_RT_AND_LB = 1015,

      FILL_GRADIENTSTYLE_ANGLE_TO_LT          = 2000,
      FILL_GRADIENTSTYLE_ANGLE_TO_LB          = 2001,
      FILL_GRADIENTSTYLE_ANGLE_TO_RT          = 2002,
      FILL_GRADIENTSTYLE_ANGLE_TO_RB          = 2003,
      FILL_GRADIENTSTYLE_ANGLE_FROM_LT        = 2004,
      FILL_GRADIENTSTYLE_ANGLE_FROM_LB        = 2005,
      FILL_GRADIENTSTYLE_ANGLE_FROM_RT        = 2006,
      FILL_GRADIENTSTYLE_ANGLE_FROM_RB        = 2007,

      FILL_GRADIENTSTYLE_RECTANGLE_TO_C       = 3000,
      FILL_GRADIENTSTYLE_RECTANGLE_FROM_C     = 3001,

      FILL_GRADIENTSTYLE_ELLIPSE_TO_C         = 4000,
      FILL_GRADIENTSTYLE_ELLIPSE_FROM_C       = 4001,

      FILL_GRADIENTSTYLE_CONE_FROM_L          = 5000,
      FILL_GRADIENTSTYLE_CONE_FROM_R          = 5001,
      FILL_GRADIENTSTYLE_CONE_FROM_T          = 5002,
      FILL_GRADIENTSTYLE_CONE_FROM_B          = 5003,
      FILL_GRADIENTSTYLE_CONE_FROM_LT         = 5004,
      FILL_GRADIENTSTYLE_CONE_FROM_LB         = 5005,
      FILL_GRADIENTSTYLE_CONE_FROM_RT         = 5006,
      FILL_GRADIENTSTYLE_CONE_FROM_RB         = 5007,
   } FillGradientStyle;  

   typedef enum tagTextBorderBrushStyle
   {
      TEXT_BORDER_BRUSHSTYLE_TRANSPARENT = 0,
      TEXT_BORDER_BRUSHSTYLE_COLOR       = 1,
   } TextBorderBrushStyle;

   typedef enum tagTextBackStyle
   {
      TEXT_BACKSTYLE_TRANSPARENT = 0,
      TEXT_BACKSTYLE_OPAQUE      = 1,
      TEXT_BACKSTYLE_TILEDIMAGE  = 2,
   } TextBackStyle;

   typedef enum tagPaintAlignStyle
   {
      PAINT_ALIGN_LEFT    = 0x01,
      PAINT_ALIGN_HCENTER = 0x02,
      PAINT_ALIGN_RIGHT   = 0x04,

      PAINT_ALIGN_TOP     = 0x08,
      PAINT_ALIGN_VCENTER = 0x10,
      PAINT_ALIGN_BOTTOM  = 0x20   
   } PaintAlignStyle;

   // Automation Stuff
   typedef enum tagPaintAutomationSelType
   {
      PAINT_AUTOMATION_SELTYPE_NONE,
      PAINT_AUTOMATION_SELTYPE_ALL,
   } PaintAutomationSelType;

   typedef enum tagPaintContainerObjectType
   {
      PAINT_CONTAINER_OBJECT_TYPE_NONE,
      PAINT_CONTAINER_OBJECT_TYPE_POINT,
      PAINT_CONTAINER_OBJECT_TYPE_LINE,
      PAINT_CONTAINER_OBJECT_TYPE_SQUARE,
      PAINT_CONTAINER_OBJECT_TYPE_RECT,
      PAINT_CONTAINER_OBJECT_TYPE_CIRCLE,
      PAINT_CONTAINER_OBJECT_TYPE_ELLIPSE,
      PAINT_CONTAINER_OBJECT_TYPE_POLYLINE,
      PAINT_CONTAINER_OBJECT_TYPE_BEZIER,
      PAINT_CONTAINER_OBJECT_TYPE_ARC,
      PAINT_CONTAINER_OBJECT_TYPE_TEXT,
      PAINT_CONTAINER_OBJECT_TYPE_COUNT = 11
   } PaintContainerObjectType;

   typedef enum tagPaintContainerEventType
   {
      PAINT_CONTAINER_EVENT_DRAW,
      PAINT_CONTAINER_EVENT_MSG,
      PAINT_CONTAINER_EVENT_ERROR
   } PaintContainerEventType;

   typedef enum tagPaintContainerEventStates
   {
      PAINT_CONTAINER_STATE_BEGIN,
      PAINT_CONTAINER_STATE_PROCESS,
      PAINT_CONTAINER_STATE_END,
      PAINT_CONTAINER_STATE_ABORT
   } PaintContainerEventStates;
   
   //Dlg Stuff
   typedef enum tagPaintBrushDlgFlags
   {
      PAINT_DLG_BRUSH_SHOWALL                 = 0x00000001,
      PAINT_DLG_BRUSH_SHOWTOUCHCONTENT        = 0x00000002,
      PAINT_DLG_BRUSH_SHOWTOUCHCOLOR          = 0x00000004,
      PAINT_DLG_BRUSH_SHOWTOUCHIMAGE          = 0x00000008,
      PAINT_DLG_BRUSH_SHOWDIAMETER            = 0x00000010,
      PAINT_DLG_BRUSH_SHOWHARDNESS            = 0x00000020,
      PAINT_DLG_BRUSH_SHOWSPACING             = 0x00000040,
      PAINT_DLG_BRUSH_SHOWOPACITY             = 0x00000080,
      PAINT_DLG_BRUSH_SHOWDENSITY             = 0x00000100,
      PAINT_DLG_BRUSH_SHOWFADEOUTRATE         = 0x00000200,
      PAINT_DLG_BRUSH_SHOWTEXTURE             = 0x00000400,
      PAINT_DLG_BRUSH_SHOWDEFAULT             = 0x00000800,
      PAINT_DLG_BRUSH_INITUSEDEFAULT          = 0x00001000,
   } PaintBrushDlgFlags;

   typedef enum tagPaintShapeDlgFlags
   {
      PAINT_DLG_SHAPE_SHOWALL                 = 0x00000001,
      PAINT_DLG_SHAPE_SHOWBKGRNDSTYLE         = 0x00000002,
      PAINT_DLG_SHAPE_SHOWBKOPAQUECOLOR       = 0x00000004,
      PAINT_DLG_SHAPE_SHOWGRADIENTSTYLE       = 0x00000008,
      PAINT_DLG_SHAPE_SHOWGRADIENTDIRECTION   = 0x00000010,
      PAINT_DLG_SHAPE_SHOWGRADIENTSTARTCOLOR  = 0x00000020,
      PAINT_DLG_SHAPE_SHOWGRADIENTENDCOLOR    = 0x00000040,
      PAINT_DLG_SHAPE_SHOWGRADIENTPREVIEW     = 0x00000080,
      PAINT_DLG_SHAPE_SHOWGRADIENTSTEPS       = 0x00000100,
      PAINT_DLG_SHAPE_SHOWBKGRNDTILE          = 0x00000200,
      PAINT_DLG_SHAPE_SHOWOPACITY             = 0x00000400,
      PAINT_DLG_SHAPE_SHOWBORDERSTYLE         = 0x00000800,
      PAINT_DLG_SHAPE_SHOWBORDERWIDTH         = 0x00001000,
      PAINT_DLG_SHAPE_SHOWBORDERBRUSHSTYLE    = 0x00002000,
      PAINT_DLG_SHAPE_SHOWBORDERCOLOR         = 0x00004000,
      PAINT_DLG_SHAPE_SHOWBORDERPATTERN       = 0x00008000,
      PAINT_DLG_SHAPE_SHOWENDCAP              = 0x00010000,
      PAINT_DLG_SHAPE_SHOWELLIPSEWIDTH        = 0x00020000,
      PAINT_DLG_SHAPE_SHOWELLIPSEHEIGHT       = 0x00040000,
      PAINT_DLG_SHAPE_SHOWTEXTURE             = 0x00080000,
      PAINT_DLG_SHAPE_SHOWDEFAULT             = 0x00100000,
      PAINT_DLG_SHAPE_INITUSEDEFAULT          = 0x00200000,
   } PaintShapeDlgFlags;

   typedef enum tagPaintRegionDlgFlags
   {
      PAINT_DLG_REGION_SHOWALL                = 0x00000001,
      PAINT_DLG_REGION_SHOWLOWERTOLERANCE     = 0x00000002,
      PAINT_DLG_REGION_SHOWUPPERTOLERANCE     = 0x00000004,
      PAINT_DLG_REGION_SHOWELLIPSEWIDTH       = 0x00000008,
      PAINT_DLG_REGION_SHOWELLIPSEHEIGHT      = 0x00000010,
      PAINT_DLG_REGION_SHOWDEFAULT            = 0x00000020,
      PAINT_DLG_REGION_INITUSEDEFAULT         = 0x00000040,
   } PaintRegionDlgFlags;

   typedef enum tagPaintFillDlgFlags
   {
      PAINT_DLG_FILL_SHOWALL                  = 0x00000001,
      PAINT_DLG_FILL_SHOWSTYLE                = 0x00000002,
      PAINT_DLG_FILL_SHOWSOLIDFILLCOLOR       = 0x00000004,
      PAINT_DLG_FILL_SHOWBKGRNDTILE           = 0x00000008,
      PAINT_DLG_FILL_SHOWGRADIENTSTYLE        = 0x00000010,
      PAINT_DLG_FILL_SHOWGRADIENTDIRECTION    = 0x00000020,
      PAINT_DLG_FILL_SHOWGRADIENTPREVIEW      = 0x00000040,
      PAINT_DLG_FILL_SHOWGRADIENTSTARTCOLOR   = 0x00000080,
      PAINT_DLG_FILL_SHOWGRADIENTENDCOLOR     = 0x00000100,
      PAINT_DLG_FILL_SHOWGRADIENTSTEPS        = 0x00000200,
      PAINT_DLG_FILL_SHOWLOWERTOLERANCE       = 0x00000400,
      PAINT_DLG_FILL_SHOWUPPERTOLERANCE       = 0x00000800,
      PAINT_DLG_FILL_SHOWOPACITY              = 0x00001000,
      PAINT_DLG_FILL_SHOWTEXTURE              = 0x00002000,
      PAINT_DLG_FILL_SHOWDEFAULT              = 0x00004000,
      PAINT_DLG_FILL_INITUSEDEFAULT           = 0x00008000,
   } PaintFillDlgFlags;

   typedef enum tagPaintTextDlgFlags
   {
      PAINT_DLG_TEXT_SHOWALL                  = 0x00000001,
      PAINT_DLG_TEXT_SHOWTEXT                 = 0x00000002,
      PAINT_DLG_TEXT_SHOWBKGRNDSTYLE          = 0x00000004,
      PAINT_DLG_TEXT_SHOWBKGRNDOPAQUECOLOR    = 0x00000008,
      PAINT_DLG_TEXT_SHOWBKGRNDTILE           = 0x00000010,
      PAINT_DLG_TEXT_SHOWBORDERSTYLE          = 0x00000020,
      PAINT_DLG_TEXT_SHOWBORDERWIDTH          = 0x00000040,
      PAINT_DLG_TEXT_SHOWBORDERCOLOR          = 0x00000080,
      PAINT_DLG_TEXT_SHOWHORZALIGNMENT        = 0x00000100,
      PAINT_DLG_TEXT_SHOWVERTALIGNMENT        = 0x00000200,
      PAINT_DLG_TEXT_SHOWROTATE               = 0x00000400,
      PAINT_DLG_TEXT_SHOWSCALE                = 0x00000800,
      PAINT_DLG_TEXT_SHOWTRUETYPEFONT         = 0x00001000,
      PAINT_DLG_TEXT_SHOWOPACITY              = 0x00002000,
      PAINT_DLG_TEXT_SHOWTEXTURE              = 0x00004000,
      PAINT_DLG_TEXT_SHOWDEFAULT              = 0x00008000,
      PAINT_DLG_TEXT_INITUSEDEFAULT           = 0x00010000,
   } PaintTextDlgFlags;
