DFORMAT\dstyle.cpp:	pDC = ::CreateIC((LPSTR)PrintDrv,(LPSTR)PrintType,(LPSTR)PrintPort,NULL) ;
RR\rrdoc.cpp:   *PrintDrv = 0;             // current printer driver
WLAYOUT\wfont.cpp:		pDC = CreateIC( PrintDrv, PrintType, PrintPort, pCurrentDevMode );
WLAYOUT\wfont.cpp:				pDC = CreateIC( PrintDrv, PrintType, PrintPort, pCurrentDevMode );
Fax\Fax.cpp:	// Set up PrintType, PrintDrv, and PrintPort based on overrides in runin.
Fax\Fax.cpp:			strcpy( m_pDoc->PrintDrv,  (const char *)sDevice );
REPIO\rpwritex.cpp:		off = putlstr(off,m_pDoc->PrintDrv);
REPIO\grmisc.cpp:			strcpy( m_pDoc->PrintDrv, &buf->yxRec[i] );
REPIO\grmisc.cpp:			i += strlen( m_pDoc->PrintDrv ) + 1;
REPIO\grmisc.cpp:			theApp.lzmemcpy(m_pDoc->PrintDrv,&buf->yxRec[i+1], j = buf->yxRec[i]);
REPIO\grmisc.cpp:			m_pDoc->PrintDrv[j] = 0;
RUNTIME\wrun.cpp:// Set up PrintType, PrintDrv, and PrintPort based on overrides in runin.
RUNTIME\wrun.cpp://              strcpy( m_pDoc->PrintDrv, pInfo5[nIndex].pDriverName );
RUNTIME\wrun.cpp:// Set up PrintType, PrintDrv, and PrintPort based on overrides in runin.
RUNTIME\wrun.cpp:	strcpy(PrintDrv,  szDriver);
DFILE\dprset.cpp:						if (strcmp(pDoc->PrintType, pName) || strcmp(pDoc->PrintDrv, pDriver) ||
DFILE\dprset.cpp:							strcpy(pDoc->PrintDrv, pDriver);
DFILE\dprint.cpp:			strcmp( (LPCSTR)pDevNames + pDevNames->wDriverOffset, m_pDoc->PrintDrv ))
DFILE\dprint.cpp:		strcpy( m_pDoc->PrintDrv, (LPCSTR)pDevNames + pDevNames->wDriverOffset );
WPRINTUI\wprint.cpp:		strcpy( PrintDrv,  (const char *)sDevice );
WPRINTUI\wprint.cpp:		CreateDC( bNT ? PrintDrv : NULL, PrintType, NULL, pSaveDevMode );
WPRINTUI\wprint.cpp:		if (!strcmpi(PrintDrv, "SHELLPRT") || !strcmpi(PrintDrv, "SHELLPRT.DRV"))
WPRINTUI\wtxtexp.cpp:			CreateDC( bNT ? pDoc->PrintDrv : NULL, pDoc->PrintType, NULL, pSaveDevMode );
WPRINTUI\wtxtexp.cpp:						(LPSTR)pDoc->PrintType,(LPSTR)pDoc->PrintDrv, NULL )))
SPEC\specopt.cpp:	zpprintf( "%s %s on %s (%s.DRV)", str, m_pDoc->PrintType, m_pDoc->PrintPort, AnsiUpper(m_pDoc->PrintDrv) );
